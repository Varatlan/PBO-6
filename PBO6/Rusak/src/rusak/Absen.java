/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package rusak;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

public class Absen extends javax.swing.JFrame {

    public void peringatan(String pesan) {
        JOptionPane.showMessageDialog(rootPane, pesan);
    }
    ArrayList<Tugas> dataTugas;

    private int masukkanData(Connection conn, String nim, String nama, String domisili) throws SQLException {
        PreparedStatement pst = conn.prepareStatement("INSERT INTO ABSEN (nim,nama,domisili) VALUES(?,?,?)");
        pst.setString(1, nim);
        pst.setString(2, nama);
        pst.setString(3, domisili);
        return pst.executeUpdate();
    }
    
    private int editData(Connection conn, String nim, String nama, String domisili) throws SQLException {
        PreparedStatement pst = conn.prepareStatement("UPDATE ABSEN set nama = ?, domisili = ? where nim = ? ");
        pst.setString(3, nim);
        pst.setString(1, nama);
        pst.setString(2, domisili);
        return pst.executeUpdate();
    }
    
    private int hapusData(Connection conn, String nim) throws SQLException {
        PreparedStatement pst = conn.prepareStatement("DELETE From ABSEN where nim = ? ");
        pst.setString(1, nim);
        return pst.executeUpdate();
    }

    private void Tampil(Connection conn) {
        dataTugas.clear();
        try {
            String sql = "select * from absen";
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                Tugas data = new Tugas();
                data.setNim(String.valueOf(rs.getObject(1)));
                data.setNama(String.valueOf(rs.getObject(2)));
                data.setDomisili(String.valueOf(rs.getObject(3)));
                dataTugas.add(data);
            }
            DefaultTableModel model = (DefaultTableModel) jTableAbsen.getModel();
            model.setRowCount(0);
            for (Tugas data : dataTugas) {

                Object[] baris = new Object[3];
                baris[0] = data.getNim();
                baris[1] = data.getNama();
                baris[2] = data.getDomisili();

                model.addRow(baris);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Absen.class.getName()).log(Level.SEVERE, null, ex);
        }
        jTextFieldNim.setText("");
        jTextFieldDomisili.setText("");
        jTextFieldNama.setText("");
    }
    
    /**
     * Creates new form Absen
     */
    public Absen() {
        try {
            dataTugas = new ArrayList<>();
            initComponents();
            Connection conn = DriverManager.getConnection("jdbc:postgresql://localhost:5433/Tugas", "postgres", "uinsa");
            Tampil(conn);
        } catch (SQLException ex) {
            Logger.getLogger(Absen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelNim = new javax.swing.JLabel();
        jLabelNama = new javax.swing.JLabel();
        jLabelDomisili = new javax.swing.JLabel();
        jTextFieldNim = new javax.swing.JTextField();
        jTextFieldNama = new javax.swing.JTextField();
        jTextFieldDomisili = new javax.swing.JTextField();
        jScrollPaneTampil = new javax.swing.JScrollPane();
        jTableAbsen = new javax.swing.JTable();
        jButtonInsert = new javax.swing.JButton();
        jButtonEdit = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jButtonPrint = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelNim.setText("NIM");

        jLabelNama.setText("NAMA");

        jLabelDomisili.setText("DOMISILI");

        jTextFieldNim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNimActionPerformed(evt);
            }
        });

        jTextFieldNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNamaActionPerformed(evt);
            }
        });

        jTextFieldDomisili.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDomisiliActionPerformed(evt);
            }
        });

        jScrollPaneTampil.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPaneTampilMouseClicked(evt);
            }
        });

        jTableAbsen.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nim", "Nama", "Domisili"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableAbsen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableAbsenMouseClicked(evt);
            }
        });
        jScrollPaneTampil.setViewportView(jTableAbsen);

        jButtonInsert.setText("Insert");
        jButtonInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsertActionPerformed(evt);
            }
        });

        jButtonEdit.setText("Edit");
        jButtonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jButtonPrint.setText("Print");
        jButtonPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabelNim, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelNama, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                        .addComponent(jLabelDomisili, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE))
                    .addComponent(jButtonInsert))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jTextFieldDomisili)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jButtonEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonPrint)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonDelete))
                    .addComponent(jTextFieldNama)
                    .addComponent(jTextFieldNim))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneTampil)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelNim)
                            .addComponent(jTextFieldNim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelNama)
                            .addComponent(jTextFieldNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelDomisili)
                            .addComponent(jTextFieldDomisili, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 134, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonInsert)
                            .addComponent(jButtonEdit)
                            .addComponent(jButtonDelete)
                            .addComponent(jButtonPrint))
                        .addGap(49, 49, 49))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPaneTampil, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldNimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNimActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNimActionPerformed

    private void jTextFieldNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNamaActionPerformed

    private void jButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            Connection conn = DriverManager.getConnection("jdbc:postgresql://localhost:5433/Tugas", "postgres", "uinsa");
        String nim = jTextFieldNim.getText();
        String nama = jTextFieldNama.getText();
        String domisili = jTextFieldDomisili.getText();
        editData(conn, nim, nama, domisili);
        } catch (SQLException ex) {
            Logger.getLogger(Absen.class.getName()).log(Level.SEVERE, null, ex);
        }
        Connection conn = null;
        try {
            conn = DriverManager.getConnection("jdbc:postgresql://localhost:5433/Tugas", "postgres", "uinsa");
        } catch (SQLException ex) {
            Logger.getLogger(Absen.class.getName()).log(Level.SEVERE, null, ex);
        }
            Tampil(conn);
    }//GEN-LAST:event_jButtonEditActionPerformed

    private void jButtonInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsertActionPerformed
        try {
            // TODO add your handling code here:
            Connection conn = DriverManager.getConnection("jdbc:postgresql://localhost:5433/Tugas", "postgres", "uinsa");
        String nim = jTextFieldNim.getText();
        String nama = jTextFieldNama.getText();
        String domisili = jTextFieldDomisili.getText();
        masukkanData(conn, nim, nama, domisili);
        } catch (SQLException ex) {
            Logger.getLogger(Absen.class.getName()).log(Level.SEVERE, null, ex);
        }
        Connection conn = null;
        try {
            conn = DriverManager.getConnection("jdbc:postgresql://localhost:5433/Tugas", "postgres", "uinsa");
        } catch (SQLException ex) {
            Logger.getLogger(Absen.class.getName()).log(Level.SEVERE, null, ex);
        }
            Tampil(conn);
    }//GEN-LAST:event_jButtonInsertActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            Connection conn = DriverManager.getConnection("jdbc:postgresql://localhost:5433/Tugas", "postgres", "uinsa");
        String nim = jTextFieldNim.getText();
        hapusData(conn, nim);
        } catch (SQLException ex) {
            Logger.getLogger(Absen.class.getName()).log(Level.SEVERE, null, ex);
        }
        Connection conn = null;
        try {
            conn = DriverManager.getConnection("jdbc:postgresql://localhost:5433/Tugas", "postgres", "uinsa");
        } catch (SQLException ex) {
            Logger.getLogger(Absen.class.getName()).log(Level.SEVERE, null, ex);
        }
            Tampil(conn);
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jTextFieldDomisiliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDomisiliActionPerformed
        // TODO add your handling code here:
        String nim = jTextFieldNim.getText().trim();
        String nama = jTextFieldDomisili.getText();
        String domisili = jTextFieldNama.getText();
        if (!nim.isEmpty() && !nama.isEmpty() && !domisili.isEmpty()) {

            try {
                // TODO add your handling code here:
                Connection conn = DriverManager.getConnection("jdbc:postgresql://localhost:5433/Tugas", "postgres", "uinsa");
                int k = masukkanData(conn, nim, nama, domisili);
                if (k > 0) {
                    Tampil(conn);
                    this.peringatan("Simpan Berhasil");
                } else {
                    this.peringatan("Simpan Gagal");
                }
            } catch (SQLException ex) {
                Logger.getLogger(Absen.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            this.peringatan("Input Data Mahasiswa Gagal");
        }
        jTextFieldNim.setText("");
        jTextFieldDomisili.setText("");
        jTextFieldNama.setText("");
    }//GEN-LAST:event_jTextFieldDomisiliActionPerformed

    private void jScrollPaneTampilMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPaneTampilMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPaneTampilMouseClicked

    private void jTableAbsenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableAbsenMouseClicked
        // TODO add your handling code here:
        int row = jTableAbsen.getSelectedRow();
        jTextFieldNim.setText(jTableAbsen.getValueAt(row, 0).toString());
        jTextFieldNama.setText(jTableAbsen.getValueAt(row, 1).toString());
        jTextFieldDomisili.setText(jTableAbsen.getValueAt(row, 2).toString());
    }//GEN-LAST:event_jTableAbsenMouseClicked

    private void jButtonPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrintActionPerformed
        try {
        Connection conn = DriverManager.getConnection("jdbc:postgresql://localhost:5433/Tugas", "postgres", "uinsa");
        String x = "src/rusak/LaporanAbsen.jasper";
        JasperPrint print = JasperFillManager.fillReport(x, null, conn);
        JasperViewer jv = new JasperViewer(print, false);
        jv.setVisible(true);
        } catch (SQLException | JRException ex) {
            Logger.getLogger(Absen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonPrintActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Absen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Absen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Absen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Absen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                new Absen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonEdit;
    private javax.swing.JButton jButtonInsert;
    private javax.swing.JButton jButtonPrint;
    private javax.swing.JLabel jLabelDomisili;
    private javax.swing.JLabel jLabelNama;
    private javax.swing.JLabel jLabelNim;
    private javax.swing.JScrollPane jScrollPaneTampil;
    private javax.swing.JTable jTableAbsen;
    private javax.swing.JTextField jTextFieldDomisili;
    private javax.swing.JTextField jTextFieldNama;
    private javax.swing.JTextField jTextFieldNim;
    // End of variables declaration//GEN-END:variables

}
